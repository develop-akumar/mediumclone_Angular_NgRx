{"ast":null,"code":"import { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { register } from '../../store.ts/actions';\nimport { RouterLink } from '@angular/router';\nimport { selectIsSubmitting } from '../../store.ts/selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nexport class RegisterComponent {\n  constructor(fb, store) {\n    this.fb = fb;\n    this.store = store;\n    this.form = this.fb.nonNullable.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.isSubmitting$ = this.store.select(selectIsSubmitting);\n  }\n  onSubmit() {\n    console.log(\"form Value = \", this.form.getRawValue());\n    const request = {\n      user: this.form.getRawValue()\n    };\n    this.store.dispatch(register({\n      request\n    }));\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"mc-register\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 23,\n      vars: 4,\n      consts: [[1, \"auth-page\"], [1, \"container\", \"page\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\", \"col-xs-12\"], [1, \"text-xs-center\"], [\"routerLink\", \"/login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Username\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"submit\", \"placeholder\", \"Email\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"pull-xs-right\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"register works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(2);\n          i0.ɵɵpipe(3, \"async\");\n          i0.ɵɵelementStart(4, \"div\", 0)(5, \"div\", 1)(6, \"div\", 2)(7, \"div\", 3)(8, \"h1\", 4);\n          i0.ɵɵtext(9, \"Sign Up\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"p\", 4)(11, \"a\", 5);\n          i0.ɵɵtext(12, \"Have an account ?\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtext(13, \" BACKEND ERRORS HERE \");\n          i0.ɵɵelementStart(14, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_14_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(15, \"fieldset\", 7);\n          i0.ɵɵelement(16, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"fieldset\", 7);\n          i0.ɵɵelement(18, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"fieldset\", 7);\n          i0.ɵɵelement(20, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"fieldset\");\n          i0.ɵɵelement(22, \"input\", 11);\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"\\n===== \", i0.ɵɵpipeBind1(3, 2, ctx.isSubmitting$), \" ====== \");\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, RouterLink],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAExF,SAASC,QAAQ,QAAQ,wBAAwB;AAEjD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,kBAAkB,QAAQ,0BAA0B;;;;AAY7D,OAAM,MAAOC,iBAAiB;EAS5BC,YAAoBC,EAAe,EACzBC,KAAyC;IAD/B,OAAE,GAAFD,EAAE;IACZ,UAAK,GAALC,KAAK;IATf,SAAI,GAAc,IAAI,CAACD,EAAE,CAACE,WAAW,CAACC,KAAK,CAAC;MAC1CC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACnCC,KAAK,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ,CAAC;MAChCE,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ;KACnC,CAAC;IAEF,kBAAa,GAAG,IAAI,CAACJ,KAAK,CAACO,MAAM,CAACX,kBAAkB,CAAC;EAMrD;EAEAY,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAAC;IACrD,MAAMC,OAAO,GAA6B;MACxCC,IAAI,EAAE,IAAI,CAACH,IAAI,CAACC,WAAW;KAC5B;IAED,IAAI,CAACZ,KAAK,CAACe,QAAQ,CAACrB,QAAQ,CAAC;MAACmB;IAAO,CAAC,CAAC,CAAE;EAC3C;;;uBAtBWhB,iBAAiB;IAAA;EAAA;;;YAAjBA,iBAAiB;MAAAmB;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UClB9BC,yBAAG;UAAAA,+BAAe;UAAAA,iBAAI;UACtBA,YAEA;;UAAAA,8BAAuB;UAIoBA,uBAAO;UAAAA,iBAAK;UACvCA,6BAA0B;UACCA,kCAAiB;UAAAA,iBAAI;UAGhDA,sCACA;UAAAA,gCAAiD;UAAxBA;YAAA,OAAYC,cAAU;UAAA,EAAC;UAC5CD,oCAA6B;UACzBA,4BAC6B;UACjCA,iBAAW;UACXA,oCAA6B;UACzBA,4BAC0B;UAC9BA,iBAAW;UACXA,oCAA6B;UACzBA,6BAC6B;UACjCA,iBAAW;UACXA,iCAAU;UACNA,6BAAsF;UAC1FA,iBAAW;;;UA3B/BA,eAEA;UAFAA,sFAEA;UAUsBA,gBAAkB;UAAlBA,oCAAkB;;;qBDC5B/B,mBAAmB,qIAC3BG,UAAU;MAAA8B;IAAA;EAAA","names":["ReactiveFormsModule","Validators","register","RouterLink","selectIsSubmitting","RegisterComponent","constructor","fb","store","nonNullable","group","username","required","email","password","select","onSubmit","console","log","form","getRawValue","request","user","dispatch","selectors","standalone","features","decls","vars","consts","template","i0","ctx","styles"],"sourceRoot":"","sources":["D:\\AK\\MY PROJECTS\\Angular 19\\MediumClone_Angular_15 Node_20\\src\\app\\auth\\components\\register\\register.component.ts","D:\\AK\\MY PROJECTS\\Angular 19\\MediumClone_Angular_15 Node_20\\src\\app\\auth\\components\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { register } from '../../store.ts/actions';\nimport { RegisterRequestInterface } from '../../types/registerRequest.interface';\nimport { RouterLink } from '@angular/router';\nimport { selectIsSubmitting } from '../../store.ts/selectors';\nimport { AuthStateInterface } from '../../types/authState.interface';\n\n@Component({\n  selector: 'mc-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  standalone: true,\n  imports: [ReactiveFormsModule,\n    RouterLink\n  ]\n})\nexport class RegisterComponent {\n  form: FormGroup = this.fb.nonNullable.group({\n    username: ['', Validators.required],\n    email: ['', Validators.required],\n    password: ['', Validators.required]\n  });\n\n  isSubmitting$ = this.store.select(selectIsSubmitting)\n\n  constructor(private fb: FormBuilder,\n    private store: Store<{auth : AuthStateInterface}>\n  ) {\n\n  }\n\n  onSubmit() {\n    console.log(\"form Value = \", this.form.getRawValue());\n    const request: RegisterRequestInterface = {\n      user: this.form.getRawValue()\n    }\n\n    this.store.dispatch(register({request}),)\n  }\n\n\n\n\n}\n","<p>register works!</p>\n===== {{ isSubmitting$ | async }} ======\n\n<div class=\"auth-page\">\n    <div class=\"container page\">\n        <div class=\"row\">\n            <div class=\"col-md-6 offset-md-3 col-xs-12\">\n                <h1 class=\"text-xs-center\">Sign Up</h1>\n                <p class=\"text-xs-center\">\n                    <a routerLink=\"/login\">Have an account ?</a>\n                </p>\n\n                BACKEND ERRORS HERE\n                <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                    <fieldset class=\"form-group\">\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control form-control-lg\"\n                            placeholder=\"Username\" />\n                    </fieldset>\n                    <fieldset class=\"form-group\">\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control form-control-lg\"\n                            placeholder=\"Email\" />\n                    </fieldset>\n                    <fieldset class=\"form-group\">\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\"\n                            placeholder=\"Password\" />\n                    </fieldset>\n                    <fieldset>\n                        <input type=\"submit\" class=\"btn btn-lg btn-primary pull-xs-right\" placeholder=\"Email\">\n                    </fieldset>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}